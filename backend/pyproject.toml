[project]
name = "psa-hackathon-backend"
version = "0.1.0"
description = "PSA Future-Ready Workforce AI Platform - Backend API"
license = { text = "MIT" }
requires-python = ">=3.11"
authors = [
    { name = "PSA Hackathon Team" }
]
readme = "README.md"
keywords = ["ai", "workforce", "career-development", "wellbeing", "mentorship"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "pydantic>=2.9.0",
    "pydantic-settings>=2.6.0",
    "openai>=1.54.0",
    "python-dotenv>=1.0.0",
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=0.24.0",
    "httpx>=0.27.0",
    "black>=24.10.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "requests>=2.32.5",
    "langchain[anthropic]>=1.0.0",
    "langchain-openai>=1.0.0",
    "langgraph>=0.1.21",
    "langchain-community>=0.4",
    "langchain-core>=1.0.0",
    "sentence-transformers>=5.1.1",
    "faiss-cpu>=1.12.0",
    "pandas>=2.3.3",
    "matplotlib>=3.10.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=0.24.0",
    "httpx>=0.27.0",
    "black>=24.10.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "I", "N", "W"]
ignore = []

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src/app --cov-report=term-missing"
